// Code generated by protoc-gen-go. DO NOT EDIT.
// source: plugin_interface.proto

/*
Package grpc is a generated protocol buffer package.

It is generated from these files:
	plugin_interface.proto

It has these top-level messages:
	ErrorStatus
	Empty
	DeployRequest
*/
package grpc

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/any"

import (
	context "golang.org/x/net/context"
	grpc1 "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ErrorStatus struct {
	Message string                 `protobuf:"bytes,1,opt,name=message" json:"message,omitempty"`
	Details []*google_protobuf.Any `protobuf:"bytes,2,rep,name=details" json:"details,omitempty"`
}

func (m *ErrorStatus) Reset()                    { *m = ErrorStatus{} }
func (m *ErrorStatus) String() string            { return proto.CompactTextString(m) }
func (*ErrorStatus) ProtoMessage()               {}
func (*ErrorStatus) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *ErrorStatus) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *ErrorStatus) GetDetails() []*google_protobuf.Any {
	if m != nil {
		return m.Details
	}
	return nil
}

type Empty struct {
}

func (m *Empty) Reset()                    { *m = Empty{} }
func (m *Empty) String() string            { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()               {}
func (*Empty) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type DeployRequest struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (m *DeployRequest) Reset()                    { *m = DeployRequest{} }
func (m *DeployRequest) String() string            { return proto.CompactTextString(m) }
func (*DeployRequest) ProtoMessage()               {}
func (*DeployRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *DeployRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func init() {
	proto.RegisterType((*ErrorStatus)(nil), "grpc.ErrorStatus")
	proto.RegisterType((*Empty)(nil), "grpc.Empty")
	proto.RegisterType((*DeployRequest)(nil), "grpc.DeployRequest")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc1.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc1.SupportPackageIsVersion4

// Client API for PluginInterface service

type PluginInterfaceClient interface {
	Initialization(ctx context.Context, in *Empty, opts ...grpc1.CallOption) (*ErrorStatus, error)
	Deploy(ctx context.Context, in *DeployRequest, opts ...grpc1.CallOption) (*ErrorStatus, error)
	UnInitialization(ctx context.Context, in *Empty, opts ...grpc1.CallOption) (*ErrorStatus, error)
}

type pluginInterfaceClient struct {
	cc *grpc1.ClientConn
}

func NewPluginInterfaceClient(cc *grpc1.ClientConn) PluginInterfaceClient {
	return &pluginInterfaceClient{cc}
}

func (c *pluginInterfaceClient) Initialization(ctx context.Context, in *Empty, opts ...grpc1.CallOption) (*ErrorStatus, error) {
	out := new(ErrorStatus)
	err := grpc1.Invoke(ctx, "/grpc.PluginInterface/Initialization", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pluginInterfaceClient) Deploy(ctx context.Context, in *DeployRequest, opts ...grpc1.CallOption) (*ErrorStatus, error) {
	out := new(ErrorStatus)
	err := grpc1.Invoke(ctx, "/grpc.PluginInterface/Deploy", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pluginInterfaceClient) UnInitialization(ctx context.Context, in *Empty, opts ...grpc1.CallOption) (*ErrorStatus, error) {
	out := new(ErrorStatus)
	err := grpc1.Invoke(ctx, "/grpc.PluginInterface/UnInitialization", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for PluginInterface service

type PluginInterfaceServer interface {
	Initialization(context.Context, *Empty) (*ErrorStatus, error)
	Deploy(context.Context, *DeployRequest) (*ErrorStatus, error)
	UnInitialization(context.Context, *Empty) (*ErrorStatus, error)
}

func RegisterPluginInterfaceServer(s *grpc1.Server, srv PluginInterfaceServer) {
	s.RegisterService(&_PluginInterface_serviceDesc, srv)
}

func _PluginInterface_Initialization_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc1.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PluginInterfaceServer).Initialization(ctx, in)
	}
	info := &grpc1.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.PluginInterface/Initialization",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PluginInterfaceServer).Initialization(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _PluginInterface_Deploy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc1.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeployRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PluginInterfaceServer).Deploy(ctx, in)
	}
	info := &grpc1.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.PluginInterface/Deploy",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PluginInterfaceServer).Deploy(ctx, req.(*DeployRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PluginInterface_UnInitialization_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc1.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PluginInterfaceServer).UnInitialization(ctx, in)
	}
	info := &grpc1.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.PluginInterface/UnInitialization",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PluginInterfaceServer).UnInitialization(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _PluginInterface_serviceDesc = grpc1.ServiceDesc{
	ServiceName: "grpc.PluginInterface",
	HandlerType: (*PluginInterfaceServer)(nil),
	Methods: []grpc1.MethodDesc{
		{
			MethodName: "Initialization",
			Handler:    _PluginInterface_Initialization_Handler,
		},
		{
			MethodName: "Deploy",
			Handler:    _PluginInterface_Deploy_Handler,
		},
		{
			MethodName: "UnInitialization",
			Handler:    _PluginInterface_UnInitialization_Handler,
		},
	},
	Streams:  []grpc1.StreamDesc{},
	Metadata: "plugin_interface.proto",
}

func init() { proto.RegisterFile("plugin_interface.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 245 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x8f, 0xcf, 0x4a, 0x03, 0x31,
	0x10, 0xc6, 0x59, 0xad, 0x5d, 0x9c, 0xc5, 0x7f, 0x51, 0x64, 0xed, 0xa9, 0xac, 0x97, 0x9e, 0xd2,
	0xb2, 0x3e, 0x81, 0x60, 0x0f, 0xbd, 0xc9, 0x8a, 0x78, 0x94, 0xb4, 0xce, 0x86, 0x40, 0x36, 0x89,
	0xc9, 0xec, 0x61, 0x7d, 0x23, 0xdf, 0x52, 0xcc, 0x1a, 0x50, 0xf0, 0xd2, 0x5b, 0x26, 0xf9, 0xf2,
	0xfd, 0xe6, 0x07, 0xd7, 0x4e, 0xf7, 0x52, 0x99, 0x57, 0x65, 0x08, 0x7d, 0x2b, 0x76, 0xc8, 0x9d,
	0xb7, 0x64, 0xd9, 0x44, 0x7a, 0xb7, 0x9b, 0xdd, 0x48, 0x6b, 0xa5, 0xc6, 0x65, 0xbc, 0xdb, 0xf6,
	0xed, 0x52, 0x98, 0x61, 0x0c, 0x54, 0x2f, 0x50, 0xac, 0xbd, 0xb7, 0xfe, 0x89, 0x04, 0xf5, 0x81,
	0x95, 0x90, 0x77, 0x18, 0x82, 0x90, 0x58, 0x66, 0xf3, 0x6c, 0x71, 0xdc, 0xa4, 0x91, 0x71, 0xc8,
	0xdf, 0x90, 0x84, 0xd2, 0xa1, 0x3c, 0x98, 0x1f, 0x2e, 0x8a, 0xfa, 0x8a, 0x8f, 0xad, 0x3c, 0xb5,
	0xf2, 0x7b, 0x33, 0x34, 0x29, 0x54, 0xe5, 0x70, 0xb4, 0xee, 0x1c, 0x0d, 0xd5, 0x2d, 0x9c, 0x3c,
	0xa0, 0xd3, 0x76, 0x68, 0xf0, 0xbd, 0xc7, 0x40, 0x8c, 0xc1, 0xc4, 0x88, 0x2e, 0x01, 0xe2, 0xb9,
	0xfe, 0xcc, 0xe0, 0xec, 0x31, 0x2a, 0x6c, 0x92, 0x01, 0x5b, 0xc1, 0xe9, 0xc6, 0x28, 0x52, 0x42,
	0xab, 0x0f, 0x41, 0xca, 0x1a, 0x56, 0xf0, 0x6f, 0x1d, 0x1e, 0x7b, 0x67, 0x17, 0x3f, 0xc3, 0xaf,
	0xed, 0x57, 0x30, 0x1d, 0x51, 0xec, 0x72, 0x7c, 0xfc, 0x03, 0xfe, 0xef, 0x47, 0x0d, 0xe7, 0xcf,
	0x66, 0x3f, 0xca, 0x76, 0x1a, 0x85, 0xef, 0xbe, 0x02, 0x00, 0x00, 0xff, 0xff, 0x53, 0x5c, 0x9c,
	0xaa, 0x74, 0x01, 0x00, 0x00,
}
